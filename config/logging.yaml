version: 1
disable_existing_loggers: False
formatters:
  simple:
    format: "%(simulation_time)s - %(name)s - %(levelname)s - %(message)s"
  entity_formatter:
    format: "%(simulation_time)s - %(message)s"
  event_formatter:
    format: "%(simulation_time)s - %(message)s"
  simple_csv_formatter:
    format: "%(message)s" # Use the direct message format from the code

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: simple
    stream: ext://sys.stdout
  file:
    class: logging_config.FileHandlerWithHeader
    level: DEBUG
    formatter: simple
    filename: logs/simulation.log
    mode: a
  event_file:
    class: logging_config.FileHandlerWithHeader
    level: INFO
    formatter: event_formatter
    filename: logs/event.log
    mode: a
  entity_file:
    class: logging_config.FileHandlerWithHeader
    level: INFO
    formatter: entity_formatter
    filename: logs/entity.log
    mode: a
  file_map_log:
    class: logging.FileHandler
    filename: "logs/map_data.csv"
    formatter: simple_csv_formatter # Use a custom formatter for CSV output
    level: INFO

loggers:
  environment:
    level: INFO
    handlers: [file]
    propagate: False # Do not propagate events to root logger
  entity:
    level: INFO
    handlers: [console, entity_file] # Now logs to both console and file
    propagate: False # Do not propagate to root logger
  event:
    level: INFO
    handlers: [event_file] # Use separate file handler for events
    propagate: False # Do not propagate entity logs to root logger
  map_logger:
    level: INFO
    handlers: [file_map_log]
    propagate: False
  root:
    level: DEBUG
    handlers: [console, file]
